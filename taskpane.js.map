{"version":3,"file":"taskpane.js","mappings":"mBAAA,IAAIA,EACJ,MAAMC,EAAiB,IAAIC,IAEpB,SAASC,EAAWC,GACvB,MAAO,CACHC,MAAOD,EACPE,UAAW,GACXC,UAAUC,GACNC,KAAKH,UAAUI,KAAKF,IAExBG,KAAKN,GACDI,KAAKJ,MAAQA,EACbI,KAAKH,UAAUM,SAASJ,IACpBA,EAASH,QAMlB,SAASQ,IACZ,OAEGb,EAGA,SAASc,EAAWN,GACvB,IAAEO,EAAAA,EAKCf,EAJCC,EAAee,IAAID,EAAQ,IACpBd,EAAegB,IAAIF,GACtBG,UAAWV,IAKhB,SAASW,EAAOC,EAAWC,EAAON,GACrCd,EAAee,IAAID,EAAQ,IACpBd,EAAegB,IAAIF,GACtBG,gBAGJlB,EAAee,EACf,MAAMO,EAAOF,EAAUC,GACvBN,EAAOQ,UAAYD,EAEnBrB,EAAegB,IAAIF,GAAQG,UAAUH,GCxCzC,SAASS,GAAK,aAAEC,IACZ,MAAMC,EAAKb,IAcX,OAZAC,GAAW,KACPY,EAAGC,cAAc,WAAWC,iBAAiB,SAAS,KAClDC,MAAM,SAAU,CACZC,OAAQ,SAEPC,MAAMC,GAAMA,EAAEC,SACdF,MAAMG,IACHT,EAAad,MAAK,YAK3B,qTAWX,SAASwB,IACL,MAAMT,EAAKb,IACLuB,EAAajC,EAAW,IAwB9B,OAtBAiC,EAAW7B,WAAW8B,IAClB,MAAMf,EAAOe,EACRC,KAAKC,GACK,mDAEEA,EAAUC,oDAItBC,KAAK,IAEVf,EAAGC,cAAc,eAAeJ,UAAYD,KAGhDR,GAAW,KACPe,MAAM,cACDE,MAAMC,GAAMA,EAAEC,SACdF,MAAMM,IACHD,EAAWzB,KAAK0B,SAIrB,iJAoCXlB,GA7BA,WACI,MAAMM,EAAetB,GAAW,GAC1BuB,EAAKb,IAoBX,OAlBAY,EAAalB,WAAU,MACQ,IAAvBkB,EAAapB,MACbc,EAAOgB,EAAY,CAAEV,aAAAA,GAAgBC,EAAGC,cAAc,YAEtDR,EAAOK,EAAM,CAAEC,aAAAA,GAAgBC,EAAGC,cAAc,eAIxDb,GAAW,KACPe,MAAM,SAAU,CACZC,OAAQ,QAEPC,MAAMC,GAAMA,EAAEC,SACdF,MAAMG,IACHT,EAAad,KAAKuB,SAIvB,iIAOC,GAAIQ,SAASC,eAAe,U","sources":["webpack://addin-project/./src/core.js","webpack://addin-project/./src/index.js"],"sourcesContent":["let globalParent;\nconst componentState = new Map();\n\nexport function useSubject(initialValue) {\n    return {\n        value: initialValue,\n        callbacks: [],\n        subscribe(callback) {\n            this.callbacks.push(callback);\n        },\n        next(value) {\n            this.value = value;\n            this.callbacks.forEach((callback) => {\n                callback(value);\n            });\n        },\n    };\n}\n\nexport function useElement() {\n    return ((parent) => {\n        return parent;\n    })(globalParent);\n}\n\nexport function useMounted(callback) {\n    ((parent) => {\n        componentState.set(parent, {\n            ...componentState.get(parent),\n            onMounted: callback,\n        });\n    })(globalParent);\n}\n\nexport function render(component, props, parent) {\n    componentState.set(parent, {\n        ...componentState.get(parent),\n        onMounted() {},\n    });\n\n    globalParent = parent;\n    const html = component(props);\n    parent.innerHTML = html;\n\n    componentState.get(parent).onMounted(parent);\n}\n","import \"./index.scss\";\n\nimport { render, useElement, useMounted, useSubject } from \"./core.js\";\n\nfunction Auth({ isAuthorized }) {\n    const el = useElement();\n\n    useMounted(() => {\n        el.querySelector(\".button\").addEventListener(\"click\", () => {\n            fetch(\"/login\", {\n                method: \"POST\",\n            })\n                .then((r) => r.json())\n                .then((result) => {\n                    isAuthorized.next(true);\n                });\n        });\n    });\n\n    return `\n        <div class=\"col justify-center align-center\">\n            <p>You are not signed in.</p>\n            <div class=\"button row justify-center align-center\">\n                <i class=\"fab fa-microsoft\"></i>\n                <span>Sign in with Google</span>\n            </div>\n        </div>\n    `;\n}\n\nfunction Signatures() {\n    const el = useElement();\n    const signatures = useSubject([]);\n\n    signatures.subscribe((data) => {\n        const html = data\n            .map((signature) => {\n                return `\n                <div>\n                    <p>${signature.title}</p>\n                </div>\n            `;\n            })\n            .join(\"\");\n\n        el.querySelector(\".signatures\").innerHTML = html;\n    });\n\n    useMounted(() => {\n        fetch(\"signatures\")\n            .then((r) => r.json())\n            .then((data) => {\n                signatures.next(data);\n            });\n    });\n\n    return `\n        <div class=\"col justify-center align-center\">\n            <div class=\"signatures\">Loading signatures...</div>\n        </div>\n    `;\n}\n\nfunction App() {\n    const isAuthorized = useSubject(false);\n    const el = useElement();\n\n    isAuthorized.subscribe(() => {\n        if (isAuthorized.value === true) {\n            render(Signatures, { isAuthorized }, el.querySelector(\"#layout\"));\n        } else {\n            render(Auth, { isAuthorized }, el.querySelector(\"#layout\"));\n        }\n    });\n\n    useMounted(() => {\n        fetch(\"/login\", {\n            method: \"GET\",\n        })\n            .then((r) => r.json())\n            .then((result) => {\n                isAuthorized.next(result);\n            });\n    });\n\n    return `\n        <div class=\"col justify-center align-center\">\n            <div id=\"layout\">Loading...</div>\n        </div>\n    `;\n}\n\nrender(App, {}, document.getElementById(\"root\"));\n"],"names":["globalParent","componentState","Map","useSubject","initialValue","value","callbacks","subscribe","callback","this","push","next","forEach","useElement","useMounted","parent","set","get","onMounted","render","component","props","html","innerHTML","Auth","isAuthorized","el","querySelector","addEventListener","fetch","method","then","r","json","result","Signatures","signatures","data","map","signature","title","join","document","getElementById"],"sourceRoot":""}